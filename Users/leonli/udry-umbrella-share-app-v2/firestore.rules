
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Stalls: Allow anyone to read the list of stalls (for the map),
    // but only authenticated users can create, update, or delete them.
    // In a real production app, you'd likely restrict writes to admins.
    match /stalls/{stallId} {
      allow read: if true;
      allow write: if request.auth != null;
    }

    // Users: A user can only read or write to their own document.
    // This is a critical security rule.
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Rentals: A user can create their own rental history, and can only read
    // their own rental history. No one can update or delete history.
    match /rentals/{rentalId} {
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;
      allow update, delete: if false; // Disallow updates and deletes for record-keeping
    }

    // Processed Stripe Payments: Secure collection, no client access.
    // Only backend functions should interact with this.
    match /processed_stripe_payments/{paymentId} {
      allow read, write: if false;
    }
  }
}
