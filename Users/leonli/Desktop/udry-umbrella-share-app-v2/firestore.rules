rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can read, create, and update their own document.
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Admins are defined by their document in the 'admins' collection.
    function isAdmin() {
      return exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // Rules for Stalls
    match /stalls/{stallId} {
      // Anyone can see the list of stalls for the map.
      allow read: if true;

      // Only an authenticated user can update a stall (e.g., decrement umbrella count in a transaction).
      // Creating and deleting stalls is restricted to admins.
      allow update: if request.auth != null;
      allow create, delete: if isAdmin();
    }
    
    // Allow admins to read/write anywhere for administrative purposes.
    match /{document=**} {
        allow read, write: if isAdmin();
    }
    
    // Rentals can be created by users, but only read by admins or the user who owns them.
    match /rentals/{rentalId} {
      allow create: if request.auth != null;
      allow read: if isAdmin() || request.auth.uid == resource.data.userId;
      allow update, delete: if isAdmin();
    }

    // Processed payments can be created by cloud functions and read by admins.
    match /processed_stripe_payments/{sessionId} {
        allow read, write: if isAdmin(); // Allow admins to manage, functions have elevated access
    }

    // Global settings can be read by anyone, but only written by admins.
    match /settings/global {
      allow read: if true;
      allow write: if isAdmin();
    }
  }
}
