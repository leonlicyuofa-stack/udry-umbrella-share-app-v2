rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Default: Deny all reads/writes to all documents
    match /{document=**} {
      allow read, write: if false;
    }

    // Admins Collection: Only authenticated admins can read this collection
    match /admins/{adminId} {
      allow read: if request.auth != null && exists(/databases/$(database)/documents/admins/$(request.auth.uid));
      allow write: if false; // Prevent client-side writes to admin list
    }

    // Users Collection: Rules for user data access
    match /users/{userId} {
      // Allow a user to read, update, or delete their OWN document.
      allow read, update, delete: if request.auth != null && request.auth.uid == userId;
      
      // Allow a user to create their OWN document.
      // This is the key change to ensure new sign-ups can create their user profile.
      allow create: if request.auth != null;
    }

    // Stalls Collection: Allow any authenticated user to read stall information.
    // Writes should only be done from a trusted server environment (like the Admin Panel).
    match /stalls/{stallId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && exists(/databases/$(database)/documents/admins/$(request.auth.uid)); // Allow admins to write
    }

    // Rentals (History) Collection: Users can read their own rental history.
    match /rentals/{rentalId} {
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;
      // Creation is handled by a secure Cloud Function, so client-side create is denied.
      allow create, update, delete: if false; 
    }

    // Processed Stripe Payments (Idempotency check): Deny all client access.
    // This collection is only written to and read by the secure Cloud Function.
    match /processed_stripe_payments/{sessionId} {
        allow read, write: if false;
    }

    // Refunds Collection: Deny all client access.
    // This collection is only written to by the secure Cloud Function.
    match /refunds/{refundId} {
        allow read, write: if false;
    }

    // Settings Collection (for Announcement Banner)
    match /settings/global {
      allow read: if true; // Allow anyone (even unauthenticated users) to read the announcement
      allow write: if request.auth != null && exists(/databases/$(database)/documents/admins/$(request.auth.uid)); // Only admins can write
    }
  }
}
