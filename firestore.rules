rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Allow public read access to the list of stalls
    match /stalls/{stallId} {
      allow read: if true;
      allow write: if false; // Protect against client-side writes
    }

    // Admins can list and read all user documents
    match /users/{userId} {
      allow read, get: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null;
      allow update: if request.auth != null && request.auth.uid == userId;
      allow list: if exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // Admins can list and read all rental history documents
    match /rentals/{rentalId} {
      allow read, list: if exists(/databases/$(database)/documents/admins/$(request.auth.uid));
      allow create, update: if request.auth != null; // Allow users to create their own rentals
    }
    
    // Admins collection:
    // Allow any logged-in user to see who is an admin. This is safe.
    // Only allow admins to write to this collection (future proofing).
    match /admins/{adminId} {
      allow read: if request.auth != null;
      allow write: if exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }
    
    // Processed payments can be created, but not read by clients.
    match /processed_stripe_payments/{paymentId} {
      allow read, write: if false;
    }
  }
}