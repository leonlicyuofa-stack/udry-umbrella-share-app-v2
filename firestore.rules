rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin status
    function isAdmin() {
      return exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // Comprehensive Admin Rule: Admins can read/write everything.
    match /{document=**} {
      allow read, write: if isAdmin();
    }
    
    // Settings Collection: Only readable by authenticated users (for the banner)
    // Write access is handled by the admin rule above.
    match /settings/{docId} {
      allow read: if request.auth != null;
    }

    // Users Collection: Users can read their own data and update specific fields.
    match /users/{userId} {
      allow read, update: if request.auth != null && request.auth.uid == userId;
    }

    // Stalls Collection:
    // Logged-in users can read all stall data.
    // Users can ONLY UPDATE the umbrella and slot count for rentals. All other fields are protected.
    match /stalls/{stallId} {
      allow read: if request.auth != null;
      allow update: if request.auth != null
                    && request.resource.data.diff(resource.data).affectedKeys()
                       .hasOnly(['availableUmbrellas', 'nextActionSlot']);
    }

    // Rentals Collection (History):
    // For now, deny client-side creation. This is handled by a secure Cloud Function.
    // Logged-in users can read their own rental history.
    match /rentals/{rentalId} {
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;
      allow create: if false; // Handled by secure Cloud Function
    }
  }
}
