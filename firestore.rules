rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for Admin role
    function isAdmin(userId) {
      return exists(/databases/$(database)/documents/admins/$(userId));
    }

    // Users Collection
    // - Authenticated users can create their own document.
    // - Users can read and update their own document.
    // - Admins can read and update any user document.
    match /users/{userId} {
      allow create: if request.auth != null;
      allow read, update: if request.auth.uid == userId || isAdmin(request.auth.uid);
    }

    // Stalls Collection
    // - Any authenticated user can read the list of stalls.
    // - Any authenticated user can update a stall (to decrement/increment umbrella count).
    match /stalls/{stallId} {
      allow read: if request.auth != null;
      allow update: if request.auth != null;
    }

    // Admins Collection
    // - Only admins can read the list of other admins.
    match /admins/{adminId} {
      allow read: if isAdmin(request.auth.uid);
    }

    // Rentals Collection (Historical Records)
    // - Users can read their own rental history.
    // - Admins can read all rental history.
    // - Users can create their own rental history records.
    match /rentals/{rentalId} {
      allow read: if request.resource.data.userId == request.auth.uid || isAdmin(request.auth.uid);
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }

    // Processed Stripe Payments Collection
    // - Locked down. Only backend functions can write here.
    match /processed_stripe_payments/{paymentId} {
      allow read, write: if false;
    }

    // Refunds Collection
    // - Locked down. Only backend functions can write here.
    match /refunds/{refundId} {
        allow read, write: if false;
    }

    // Settings Collection (for global announcement banner)
    // - Anyone can read.
    // - Only admins can write.
    match /settings/global {
      allow read: if true;
      allow write: if isAdmin(request.auth.uid);
    }
  }
}
