rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the requesting user's UID exists in the /admins collection.
    function isAdmin() {
      return exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // Stalls: Publicly readable by anyone, but only writable by admins.
    match /stalls/{stallId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Users: Users can read and update their own data. Admins can update any user's data (e.g., to reset a rental).
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId || isAdmin();
      allow create: if request.auth.uid == userId;
    }
    
    // Admins collection can only be modified by server-side functions, not by clients.
    match /admins/{adminId} {
      allow read, write: if false;
    }

    // Rentals: Users can create their own rental history. Only admins can read all rental histories.
    match /rentals/{rentalId} {
      allow read: if isAdmin();
      allow create: if request.auth.uid == request.resource.data.userId;
      allow update, delete: if false; // Prevent modification of history
    }

    // Processed Payments: These should only be written by server-side functions.
    match /processed_stripe_payments/{paymentId} {
       allow read, write: if false;
    }
  }
}
