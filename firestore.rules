
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // --- Helper Functions ---
    // Checks if the user is authenticated.
    function isSignedIn() {
      return request.auth != null;
    }
    
    // Checks if the user is a registered administrator.
    function isAdmin() {
      return isSignedIn() && exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // --- Admins Collection ---
    // Secure the list of admins. Only other admins can read or write to this.
    match /admins/{adminId} {
      allow read, write: if isAdmin();
    }

    // --- Users Collection ---
    // Rules for individual user data.
    match /users/{userId} {
      // CREATE: A new user document can be created if the user is signed in and the document ID matches their own UID.
      allow create: if isSignedIn() && request.auth.uid == userId;
      
      // READ: Users can only read their own data. Admins can read any user's data.
      allow read: if (isSignedIn() && request.auth.uid == userId) || isAdmin();
      
      // UPDATE: A user can only update their own document. This is crucial for starting/ending rentals.
      // We also check that they are not trying to maliciously change critical fields like balance or deposit.
      allow update: if isSignedIn() && request.auth.uid == userId
                    && !(request.resource.data.balance > resource.data.balance + 0.01) // Prevent self-increasing balance
                    && !(request.resource.data.deposit > resource.data.deposit + 0.01);  // Prevent self-increasing deposit
    }
    
    // --- Stalls Collection ---
    // Rules for umbrella stall data.
    match /stalls/{stallId} {
      // READ: Any authenticated user can read stall information to see it on the map.
      allow read: if isSignedIn();
      
      // UPDATE: A user can update a stall's umbrella count ONLY when starting or ending a rental.
      // This is a critical rule to fix the live app issue.
      allow update: if isSignedIn()
                    && (request.resource.data.availableUmbrellas == resource.data.availableUmbrellas - 1  // Renting
                        || request.resource.data.availableUmbrellas == resource.data.availableUmbrellas + 1); // Returning
                        
      // Admins have full write access to add, delete, or modify stalls.
      allow write: if isAdmin();
    }
    
    // --- Rentals Collection ---
    // Rules for historical rental records.
    match /rentals/{rentalId} {
      // CREATE: A user can create a rental history for themselves. This happens when a rental ends.
      allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
      
      // READ: Users can only read their own rental history. Admins can read any rental history.
      allow read: if (isSignedIn() && resource.data.userId == request.auth.uid) || isAdmin();
    }
    
    // --- Processed Stripe Payments Collection ---
    // This collection is only written to by backend Cloud Functions, so client access is denied.
    match /processed_stripe_payments/{paymentId} {
        allow read, write: if false;
    }
    
    // --- Settings Collection (for Announcement Banner) ---
    match /settings/global {
      // READ: Any authenticated user can read global settings.
      allow read: if isSignedIn();
      // WRITE: Only admins can change global settings.
      allow write: if isAdmin();
    }
  }
}
