rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Stalls Collection: Publicly readable for the map, but only writable by admins.
    match /stalls/{stallId} {
      allow read: if true;
      allow write: if request.auth != null && exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // Users Collection:
    // - A user can get or update their OWN document.
    // - An admin can list ALL user documents for the admin panel.
    match /users/{userId} {
      allow get, update: if request.auth != null && request.auth.uid == userId;
      allow list: if request.auth != null && exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // Rentals Collection (Historical Data):
    // - Only admins can list all historical rental data.
    match /rentals/{rentalId} {
       allow list: if request.auth != null && exists(/databases/$(database)/documents/admins/$(request.auth.uid));
       allow read, write: if request.auth != null; // Allow users to create/read their own rentals
    }
    
    // Processed Stripe Payments Collection:
    // - Internal collection, should not be client-accessible for reads/lists.
    // - Writes happen via backend functions, which have elevated privileges.
    match /processed_stripe_payments/{paymentId} {
      allow read, list, write: if false;
    }

    // Admins Collection:
    // - Only other admins can read or write to this collection.
    // - This prevents non-admins from making themselves an admin.
    match /admins/{adminId} {
       allow read, write: if request.auth != null && exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }
  }
}
