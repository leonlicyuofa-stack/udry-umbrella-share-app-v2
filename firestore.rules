rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin status by checking for their UID in the 'admins' collection.
    function isAdmin() {
      return exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // --- STALLS: Publicly readable, admin writable ---
    match /stalls/{stallId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // --- SETTINGS: Admin read/write for global settings like announcements ---
    match /settings/{setting} {
      allow read, write: if isAdmin();
    }

    // --- USERS: Users can only access their own data ---
    match /users/{userId} {
      allow read, update, delete: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null;
    }

    // --- RENTALS: Users can read their own, admins can read all ---
    match /rentals/{rentalId} {
      allow read: if (request.auth != null && resource.data.userId == request.auth.uid) || isAdmin();
      allow create: if request.auth != null;
      allow update, delete: if false; // Rentals are immutable
    }

    // --- REFUNDS & PAYMENTS: Admins can read for auditing, but creation is handled by secure cloud functions.
    match /refunds/{refundId} {
        allow read: if isAdmin();
        allow write: if false;
    }
    
    match /processed_stripe_payments/{paymentId} {
        allow read: if isAdmin();
        allow write: if false;
    }
    
    // --- ADMINS: Only readable by other admins. Creation is handled by a secure cloud function.
    match /admins/{adminId} {
        allow read: if isAdmin();
        allow write: if false;
    }
  }
}
