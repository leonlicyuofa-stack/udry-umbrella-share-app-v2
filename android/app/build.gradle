// DO NOT EDIT THIS FILE!
// This file is generated by the Capacitor CLI.
// It contains pointers to all of the Android library projects that are
// also part of your app.

apply plugin: 'com.android.application'

android {
    namespace "com.getcapacitor.myapp"
    compileSdkVersion 34
    defaultConfig {
        applicationId "com.udry.app"
        minSdkVersion 24
        targetSdkVersion 34
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        aaptOptions {
             // Files and dirs to omit from the packaged assets dir, modified to accommodate modern builds.
            ignoreAssetsPattern '!.svn:!.git:!.DS_Store:!*.scc:.*:!CVS:!thumbs.db:!picasa.ini:!*~'
        }
    }
    
    // --- Start of Corrected Signing Configuration ---
    // This properties file should be created by you and placed in the android/ directory.
    // It should contain the following lines:
    // my-release-key-alias=<your-key-alias>
    // my-release-key-password=<your-key-password>
    // my-release-store-password=<your-store-password>
    // my-release-store-file=my-release-key.keystore
    
    // First, define a properties object to hold your sensitive data
    def keystoreProperties = new Properties()
    // Define the expected location of the properties file
    def keystorePropertiesFile = rootProject.file('keystore.properties')
    
    // Check if the file exists and load it
    if (keystorePropertiesFile.exists()) {
        keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
    } else {
        println "Release signing configuration not found. Skipping."
    }
    
    signingConfigs {
        release {
            if (keystorePropertiesFile.exists() && keystoreProperties.getProperty('my-release-store-file') != null) {
                storeFile file(keystoreProperties['my-release-store-file'])
                storePassword keystoreProperties['my-release-store-password']
                keyAlias keystoreProperties['my-release-key-alias']
                keyPassword keystoreProperties['my-release-key-password']
            } else {
                // This is a placeholder for builds where signing is not required (e.g., debug)
                // Using debug keystore to satisfy Gradle's requirement for a config, but it won't be used for the release build type.
                storeFile file(System.getProperty("user.home") + "/.android/debug.keystore")
                storePassword "android"
                keyAlias "androiddebugkey"
                keyPassword "android"
            }
        }
    }
    
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            // Only apply the signing config if the properties file was actually found and loaded
            if (keystorePropertiesFile.exists() && keystoreProperties.getProperty('my-release-store-file') != null) {
                signingConfig signingConfigs.release
            }
        }
    }
    // --- End of Corrected Signing Configuration ---

}

repositories {
    flatDir{
        dirs '../capacitor-cordova-android-plugins/src/main/libs', 'libs'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "androidx.appcompat:appcompat:1.6.1"
    implementation "androidx.coordinatorlayout:coordinatorlayout:1.2.0"
    implementation project(':capacitor-android')
    testImplementation "junit:junit:4.13.2"
    androidTestImplementation "androidx.test.ext:junit:1.1.5"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.5.1"
    implementation project(':capacitor-cordova-android-plugins')
}

apply from: 'capacitor.build.gradle'

try {
    def servicesJSON = file('google-services.json')
    if (servicesJSON.exists()) {
        apply plugin: 'com.google.gms.google-services'
    }
} catch(Exception e) {
    logger.info("google-services.json not found, google-services plugin not applied. Push Notifications won't work")
}
