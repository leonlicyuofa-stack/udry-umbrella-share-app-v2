apply plugin: 'com.android.application'

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
} else {
    // Also check the android directory for the properties file
    def androidKeystoreFile = project.file("keystore.properties")
    if (androidKeystoreFile.exists()) {
        keystoreProperties.load(new FileInputStream(androidKeystoreFile))
    }
}


android {
    namespace "com.getcapacitor.app"
    compileSdkVersion 34
    defaultConfig {
        applicationId "com.getcapacitor.app"
        minSdkVersion 24
        targetSdkVersion 34
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        aaptOptions {
             // Files and dirs to omit from the APK.
             // Can be used to remove assets like this:
             // noCompress "couto.sqlor"
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            if (keystoreProperties.getProperty('my-release-store-file') != null) {
                signingConfig signingConfigs.release
            }
        }
    }
    signingConfigs {
        release {
            if (keystoreProperties.getProperty('my-release-store-file') != null) {
                storeFile file(keystoreProperties.getProperty('my-release-store-file'))
                storePassword keystoreProperties.getProperty('my-release-store-password')
                keyAlias keystoreProperties.getProperty('my-release-key-alias')
                keyPassword keystoreProperties.getProperty('my-release-key-password')
            } else {
                println "Release signing configuration not found. Skipping."
            }
        }
    }
}

repositories {
    flatDir{
        dirs '../capacitor-cordova-android-plugins/src/main/libs', 'libs'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "androidx.appcompat:appcompat:$androidxAppCompatVersion"
    implementation project(':capacitor-android')
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$androidxJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidxEspressoCoreVersion"
    implementation project(':capacitor-cordova-android-plugins')
}

if (project.hasProperty('postBuildExtras')) {
    postBuildExtras()
}

def capacitor_android_versions_file = rootProject.file("capacitor.android.versions.gradle")
if (capacitor_android_versions_file.exists()) {
    apply from: capacitor_android_versions_file
}

def capacitor_build_gradle = rootProject.file('node_modules/@capacitor/android/capacitor.build.gradle')
if (capacitor_build_gradle.exists()) {
    apply from: capacitor_build_gradle
}
